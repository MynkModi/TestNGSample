<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="7" total="23" passed="14" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-05-07T20:13:27 EDT" name="Suite" finished-at="2022-05-07T20:13:27 EDT" duration-ms="231">
    <groups>
      <group name="grp3Smoke">
        <method signature="GroupTestExample.testGrpTest2()[pri:0, instance:demo2.GroupTestExample@52de51b6]" name="testGrpTest2" class="demo2.GroupTestExample"/>
      </group> <!-- grp3Smoke -->
    </groups>
    <test started-at="2022-05-07T20:13:27 EDT" name="Test1" finished-at="2022-05-07T20:13:27 EDT" duration-ms="84">
      <class name="demo1.ExpectedExceptionExample">
        <test-method signature="checkResult()[pri:0, instance:demo1.ExpectedExceptionExample@53142455]" started-at="2022-05-07T20:13:27 EDT" name="checkResult" finished-at="2022-05-07T20:13:27 EDT" duration-ms="1" status="FAIL">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method ExpectedExceptionExample.checkResult()[pri:0, instance:demo1.ExpectedExceptionExample@53142455] should have thrown an exception of type class java.lang.ArithmeticException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method ExpectedExceptionExample.checkResult()[pri:0, instance:demo1.ExpectedExceptionExample@53142455] should have thrown an exception of type class java.lang.ArithmeticException
at org.testng.internal.invokers.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:81)
at org.testng.internal.invokers.TestInvoker.considerExceptions(TestInvoker.java:853)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:714)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResult -->
      </class> <!-- demo1.ExpectedExceptionExample -->
      <class name="demo1.EnabledFalseExample">
        <test-method signature="testC2M1()[pri:0, instance:demo1.EnabledFalseExample@784c3487]" started-at="2022-05-07T20:13:27 EDT" name="testC2M1" finished-at="2022-05-07T20:13:27 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testC2M1 -->
        <test-method signature="testC2M2()[pri:0, instance:demo1.EnabledFalseExample@784c3487]" started-at="2022-05-07T20:13:27 EDT" name="testC2M2" finished-at="2022-05-07T20:13:27 EDT" duration-ms="2" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [c2 method 2 working fine] but found [c2 method 2 working not fine]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [c2 method 2 working fine] but found [c2 method 2 working not fine]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at demo1.EnabledFalseExample.testC2M2(EnabledFalseExample.java:18)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testC2M2 -->
      </class> <!-- demo1.EnabledFalseExample -->
      <class name="demo1.InvocationCountExample">
        <test-method signature="msgPrint()[pri:0, instance:demo1.InvocationCountExample@7966baa7]" started-at="2022-05-07T20:13:27 EDT" name="msgPrint" finished-at="2022-05-07T20:13:27 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- msgPrint -->
        <test-method signature="msgPrint()[pri:0, instance:demo1.InvocationCountExample@7966baa7]" started-at="2022-05-07T20:13:27 EDT" name="msgPrint" finished-at="2022-05-07T20:13:27 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- msgPrint -->
      </class> <!-- demo1.InvocationCountExample -->
      <class name="demo1.BeforeAfterExample">
        <test-method signature="testC1M1()[pri:0, instance:demo1.BeforeAfterExample@340da44c]" started-at="2022-05-07T20:13:27 EDT" name="testC1M1" finished-at="2022-05-07T20:13:27 EDT" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testC1M1 -->
        <test-method signature="testC1M2()[pri:0, instance:demo1.BeforeAfterExample@340da44c]" started-at="2022-05-07T20:13:27 EDT" name="testC1M2" finished-at="2022-05-07T20:13:27 EDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testC1M2 -->
      </class> <!-- demo1.BeforeAfterExample -->
      <class name="demo1.ParameterExample">
        <test-method signature="paramTest(java.lang.String,int)[pri:0, instance:demo1.ParameterExample@40dff0b7]" started-at="2022-05-07T20:13:27 EDT" name="paramTest" finished-at="2022-05-07T20:13:27 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Adam]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[22109]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- paramTest -->
        <test-method signature="testDataProvider(int)[pri:0, instance:demo1.ParameterExample@40dff0b7]" started-at="2022-05-07T20:13:27 EDT" name="testDataProvider" data-provider="dp1" finished-at="2022-05-07T20:13:27 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDataProvider -->
        <test-method signature="testDataProvider(int)[pri:0, instance:demo1.ParameterExample@40dff0b7]" started-at="2022-05-07T20:13:27 EDT" name="testDataProvider" data-provider="dp1" finished-at="2022-05-07T20:13:27 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDataProvider -->
        <test-method signature="testDataProvider(int)[pri:0, instance:demo1.ParameterExample@40dff0b7]" started-at="2022-05-07T20:13:27 EDT" name="testDataProvider" data-provider="dp1" finished-at="2022-05-07T20:13:27 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDataProvider -->
        <test-method signature="testDataProvider(int)[pri:0, instance:demo1.ParameterExample@40dff0b7]" started-at="2022-05-07T20:13:27 EDT" name="testDataProvider" data-provider="dp1" finished-at="2022-05-07T20:13:27 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDataProvider -->
        <test-method signature="testDataProvider(int)[pri:0, instance:demo1.ParameterExample@40dff0b7]" started-at="2022-05-07T20:13:27 EDT" name="testDataProvider" data-provider="dp1" finished-at="2022-05-07T20:13:27 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDataProvider -->
      </class> <!-- demo1.ParameterExample -->
      <class name="demo1.SoftAssertExample">
        <test-method signature="testSoftAssert()[pri:0, instance:demo1.SoftAssertExample@681a8b4e]" started-at="2022-05-07T20:13:27 EDT" name="testSoftAssert" finished-at="2022-05-07T20:13:27 EDT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSoftAssert -->
      </class> <!-- demo1.SoftAssertExample -->
    </test> <!-- Test1 -->
    <test started-at="2022-05-07T20:13:27 EDT" name="Test2" finished-at="2022-05-07T20:13:27 EDT" duration-ms="7">
      <class name="demo2.GroupTestExample">
        <test-method signature="testGrpTest2()[pri:0, instance:demo2.GroupTestExample@52de51b6]" started-at="2022-05-07T20:13:27 EDT" name="testGrpTest2" finished-at="2022-05-07T20:13:27 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGrpTest2 -->
      </class> <!-- demo2.GroupTestExample -->
    </test> <!-- Test2 -->
    <test started-at="2022-05-07T20:13:27 EDT" name="Test4" finished-at="2022-05-07T20:13:27 EDT" duration-ms="69">
      <class name="demo4.JunitToTestNGExample">
        <test-method signature="testJunittoTestNg()" started-at="2022-05-07T20:13:27 EDT" name="testJunittoTestNg" finished-at="2022-05-07T20:13:27 EDT" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJunittoTestNg -->
      </class> <!-- demo4.JunitToTestNGExample -->
    </test> <!-- Test4 -->
  </suite> <!-- Suite -->
</testng-results>
